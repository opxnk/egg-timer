<!DOCTYPE html>
<html>
<head>
    <title>Egg Boiling Timer</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            max-width: 400px;
            margin: 20px auto;
            padding: 20px;
            text-align: center;
        }
        .timer-box {
            border: 2px solid #333;
            border-radius: 10px;
            padding: 20px;
            margin: 20px 0;
            background-color: #fff8e1;
        }
        button {
            padding: 10px 20px;
            margin: 5px;
            font-size: 16px;
            cursor: pointer;
            background-color: #4CAF50;
            color: white;
            border: none;
            border-radius: 5px;
        }
        #time-display {
            font-size: 48px;
            margin: 20px 0;
            font-weight: bold;
            color: #333;
        }
    </style>
</head>
<body>
    <div class="timer-box">
        <h1>ü•ö Egg Boiling Timer üç≥</h1>
        <p>Choose egg type:</p>
        <button onclick="startTimer(360)">Soft Boiled (6min)</button>
        <button onclick="startTimer(600)">Hard Boiled (10min)</button>
        <div id="time-display">00:00</div>
        <button onclick="stopTimer()" style="background-color: #f44336;">Stop Timer</button>
        <p id="message">Start timer when water boils!</p>
    </div>

    <script>
        let timer;
        let audioContext;

        function startTimer(seconds) {
            // Initialize audio context on first user interaction
            if (!audioContext) {
                audioContext = new (window.AudioContext || window.webkitAudioContext)();
            }

            stopTimer(); // Clear any existing timer
            const startTime = Date.now();
            const endTime = startTime + (seconds * 1000);

            updateDisplay(seconds);

            timer = setInterval(() => {
                const remaining = Math.round((endTime - Date.now()) / 1000);
                
                if (remaining <= 0) {
                    stopTimer();
                    completeTimer();
                    return;
                }
                
                updateDisplay(remaining);
            }, 1000);
        }

        function updateDisplay(seconds) {
            const mins = Math.floor(seconds / 60).toString().padStart(2, '0');
            const secs = (seconds % 60).toString().padStart(2, '0');
            document.getElementById('time-display').textContent = `${mins}:${secs}`;
        }

        function completeTimer() {
            document.getElementById('message').innerHTML = "üîî Time's up! Eggs are ready!<br>Cool eggs in cold water immediately!";
            playAlertSound();
            document.getElementById('time-display').textContent = "00:00";
        }

        function stopTimer() {
            clearInterval(timer);
            document.getElementById('message').textContent = "Timer stopped!";
        }

        function playAlertSound() {
            if (audioContext) {
                const oscillator = audioContext.createOscillator();
                const gainNode = audioContext.createGain();
                
                oscillator.connect(gainNode);
                gainNode.connect(audioContext.destination);

                oscillator.frequency.value = 880;
                gainNode.gain.setValueAtTime(0.1, audioContext.currentTime);

                oscillator.start();
                oscillator.stop(audioContext.currentTime + 0.5);
            }
        }
    </script>
</body>
</html>
